name: Dockerized .NET Build with Linting Annotations

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install .NET SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y dotnet-sdk-7.0

      - name: Docker Build with Logs Capture
        id: build
        run: |
          # Build the Docker image and log output to build.log
          docker build --progress=plain -t sample-dotnet-app . > build.log 2>&1 || true

      - name: Parse Docker Build Logs for Annotations
        run: |
          # Check for warnings in the logs and create annotations
          grep "warning" build.log | awk '{print "::warning file=Program.cs,line=10,col=5::" $0}' || true

          # Check for errors in the logs and create annotations
          grep "error" build.log | awk '{print "::error file=Program.cs,line=20,col=5::" $0}' || true

      - name: Run Linter and Capture Logs
        id: lint
        run: |
          # Run .NET format or StyleCop linting checks and save to lint.log
          dotnet format --check --verbosity detailed > lint.log 2>&1 || true

      - name: Parse Lint Logs for Annotations
        run: |
          # Create annotations for linting warnings and errors
          grep "warning" lint.log | awk '{print "::warning file=Program.cs,line=10,col=5::" $0}' || true
          grep "error" lint.log | awk '{print "::error file=Program.cs,line=20,col=5::" $0}' || true

      - name: Verify Workflow Success
        run: |
          # Fail the workflow if lint or build contains critical errors
          if grep "error" lint.log || grep "error" build.log; then
            echo "Errors detected, please resolve them before merging."
            exit 1
          fi
