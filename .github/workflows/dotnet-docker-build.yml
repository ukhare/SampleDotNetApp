name: Dockerized .NET Build with Categorized Annotations

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  categorized-annotations:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Install .NET SDK
#      - name: Install .NET SDK
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y dotnet-sdk-7.0

      - name: Install .NET SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https
          wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y dotnet-sdk-7.0

      ### DOTNET PUBLISH ANNOTATIONS ###
      - name: DotNet Publish with Logs Capture
        id: publish
        run: |
          echo "Starting publish..."
          dotnet publish -c Release -o ./publish_output > publish.log 2>&1 || true
        continue-on-error: true

      - name: Publish Status
        id: build_status
        run: |
          # Publish warnings
          grep "warning" publish.log | while read -r line; do
            echo "::warning title=Publish::$line"
          done || true

          # Publish errors
          grep "error" publish.log | while read -r line; do
            echo "::error title=Publish::$line"
          done || true

      ### LINT ANNOTATIONS ###
      - name: Run Linter and Capture Logs
        id: lint
        run: |
          dotnet format --check --verbosity detailed

#      - name: Lint Logs
#        id: lint_status
#        run: |
#          # Lint warnings
#          grep "warning" lint.log | while read -r line; do
#            echo "::warning title=Lint::$line"
#          done || true
#
#          # Lint errors
#          grep "error" lint.log | while read -r line; do
#            echo "::error title=Lint::$line"
#          done || true

      ### TEST ANNOTATIONS ###
#      - name: Run Tests and Save Results
#        id: test
#        run: |
#          mkdir -p test-results
#          dotnet test --logger:"junit;LogFilePath=test-results/test-results.xml" || true##

#      - name: Test Failures
#        uses: scacap/action-surefire-report@v1
#        with:
#          paths: test-results/test-results.xml
#          title: Test

      # Test the project and capture logs
      - name: DotNet Test with Logs Capture
        id: test
        run: |
          echo "Starting tests..."
          dotnet test -c Release --verbosity normal "tests/SampleDotNetApp.Tests/SampleDotNetApp.Tests.csproj" > test.log 2>&1 || true
        continue-on-error: true

      # Parse test logs for annotations
      - name: Test Status
        run: |
          # Test warnings
          grep "warning" test.log | while read -r line; do
            echo "::warning title=Test::$line"
          done || true

          # Test errors
          grep "error" test.log | while read -r line; do
            echo "::error title=Test::$line"
          done || true

      ### VERIFY WORKFLOW SUCCESS ###
      - name: Verify Workflow Success
        run: |
          # Fail workflow if errors exist in any stage
          if grep "error" lint.log || grep "error" build.log || grep "Failed" test-results/test-results.xml; then
            echo "Errors detected. Please resolve them."
            exit 1
          fi
